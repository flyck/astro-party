---
import * as z from 'zod';
const { request } = Astro;
import { db, Parties } from 'astro:db';

const inputSchema = z.object({
  title: z.string().min(1).max(100),
  description: z.string().max(100),
  location: z.string().max(100),
  date: z.string().max(100)
});

const data = await request.formData()
let inputJson: {[key: string]: any} = {}
data.forEach((value, key: string) => {inputJson[key] = value})

const parsedInput = inputSchema.safeParse(inputJson)

console.log("Parse result: " + JSON.stringify(parsedInput))
console.log("Input correct: " + parsedInput.success)
if (parsedInput.success) {
  const newParty = {...parsedInput.data}
  console.log("Inserting party: " + JSON.stringify(newParty))
   const insertResult = await db.insert(Parties).values([
     newParty
   ]).returning()

  console.log("Insert result: " + JSON.stringify(insertResult))

  const partyId = insertResult[0].id

  return new Response(JSON.stringify({ ok: true }), {
    status: 200,
    headers: {
      "hx-redirect": `/${partyId}/details`,
    },
  })
}

function parseError() {
  return "Bad input"
}
---
<div class="text-red-500">{parseError()}</div>
