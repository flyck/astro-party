---
import * as z from 'zod';
const { request } = Astro;
import { db, eq, Parties } from 'astro:db';

const inputSchema = z.object({
  title: z.string().min(1).max(100),
  description: z.string().max(100),
  location: z.string().max(100),
  date: z.string().max(100)
});

const url = new URL(request.headers.get("Hx-Current-Url") || "")
const id = parseInt(url.pathname.split("/")[1] || "")

if (!id ) {
    return new Response(JSON.stringify({message: "bad request"}),{status: 400})
}

const data = await request.formData()
let inputJson: {[key: string]: any} = {}
data.forEach((value, key: string) => {inputJson[key] = value})

const parsedInput = inputSchema.safeParse(inputJson)

console.log("Input correct: " + parsedInput.success)
if (parsedInput.success) {
  const party = await db.update(Parties).set(
    {...parsedInput.data}
  ).where(eq(Parties.id, id))

  console.log(party)

  return new Response(undefined, {
    status: 200,
  })
}

function parseError() {
  return "Bad input"
}
---
<div class="text-red-500">{parseError()}</div>
