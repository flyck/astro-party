---
import * as z from 'zod';
const { request } = Astro;
import { db, eq, Parties } from 'astro:db';
import { toastResponse, ToastError } from "../../../components/toast.astro"
import { getPartyIdOrThrowToast, validateFormOrThrowToast } from "../../../utils/input.astro"

const inputSchema = z.object({
  title: z.string().min(1).max(100),
  description: z.string().max(100),
  location: z.string().max(100),
  date: z.string().max(100)
});

try {
  const id = getPartyIdOrThrowToast(request)
  const parsedInput = await validateFormOrThrowToast(request, inputSchema)

  const party = await db.update(Parties).set(
    {...parsedInput}
  ).where(eq(Parties.id, id))

  console.log(party)
} catch(error) {
  if (error instanceof ToastError) {
    return toastResponse(error.level, error.message)
  }
  return toastResponse("error", "Something went wrong. :(")
}
---
