---
import {db, eq, Parties} from "astro:db";
import PartyDetails from "../../../components/forms/partyDetails.astro"
import {toastResponse, ToastError} from "../../../components/toast.astro"

const { request } = Astro

let party: any[] = []

try {
  const url = new URL(request.headers.get("Hx-Current-Url") || "")
  const id = url.pathname.split("/")[1] || ""

  if (!id ) {
    throw new ToastError("danger", "Bad request", 400)
  }

  party = await db.select().from(Parties).where(eq(Parties.id, id));

  if (party.length == 0) {
    // TODO should be a 404, but somehow the toast is not displayed then.
    // only a few days ago, custom 404s didnt work at all: https://github.com/withastro/astro/issues/10590
    throw new ToastError("danger", "Party doesnt exist.", 400)
  }
} catch(error) {
  if (error instanceof ToastError) {
    return toastResponse(error)
  }
  return toastResponse(new ToastError("error", "Something went wrong. :(", 500))
}

const {title, location, description, date} = party[0] || {}
---
<!-- In a seperate components so we can have load skeletons -->
<PartyDetails title={title} location={location} date={date} description={description} loading={false} />
