---
import {db, eq, Parties} from "astro:db";
import PartyDetails from "../../../components/forms/partyDetails.astro"
import {toastResponse, ToastError} from "../../../components/toast.astro"

const { request } = Astro

let party: any[] = []

try {
  const url = new URL(request.headers.get("Hx-Current-Url") || "")
  const id = parseInt(url.pathname.split("/")[1] || "")

  if (!id ) {
    throw new ToastError("danger", "bad request")
  }

  party = await db.select().from(Parties).where(eq(Parties.id, id));

  if (party.length == 0) {
    throw new ToastError("danger", "Party doesnt exist.")
  }
} catch(error) {
  if (error instanceof ToastError) {
    return toastResponse(error.level, error.message)
  }
  return toastResponse("error", "Something went wrong. :(")
}

const {title, location, description, date} = party[0] || {}
---
<!-- In a seperate components so we can have load skeletons -->
<PartyDetails title={title} location={location} date={date} description={description} loading={false} />
