---
import { Participants, Parties, Tasks, db, eq } from "astro:db";
import TaskList from "../../../components/content/taskList.astro";
import { ToastError, toastResponse } from "../../../utils/toast";
import { getPartyIdOrThrowToast } from "../../../utils/utils";

const { request } = Astro;

let tasks = [];
let participants = [];
try {
  const id = getPartyIdOrThrowToast(request);

  const party = await db.select().from(Parties).where(eq(Parties.id, id));
  if (party.length === 0) {
    throw new ToastError("danger", "Party does not exist.", 400);
  }

  tasks = await db.select().from(Tasks).where(eq(Tasks.partyId, id));
  participants = await db
    .select()
    .from(Participants)
    .where(eq(Participants.partyId, id));
} catch (error) {
  if (error instanceof ToastError) {
    return toastResponse(error);
  }
  return toastResponse(
    new ToastError("danger", "Something went wrong. :(", 500),
  );
}
---
<TaskList participants={participants} tasks={tasks} />