---
import {db, Tasks, eq} from "astro:db";
import {toastResponse, ToastError} from "../../../utils/toast"
import { getPartyIdOrThrowToast } from "../../../utils/input.astro"
import StatusBadge from "../../../components/statusBadge.astro"
import type {Status} from "../../../components/statusBadge.astro"
import Modal from "../../../layouts/Modal.astro"
import Input from "../../../components/mini/input.astro"
import SubmitButton from "../../../components/submitButton.astro"
import DeleteButton from "../../../components/deleteButton.astro"
import StatusDropdown from "../../../components/statusDropdown.astro"

const { request } = Astro

let tasks = []
try {
  const id = getPartyIdOrThrowToast(request)

  tasks = await db.select().from(Tasks).where(eq(Tasks.partyId, id));
} catch(error) {
  if (error instanceof ToastError) {
    return toastResponse(error.level, error.message)
  }
  return toastResponse("error", "Something went wrong. :(", 500)
}
---
<ul id="openEditTaskModal">
  {tasks.map((t, index) =>
  <div id={index.toString()} class="flex items-center justify-between border-b border-gray-500 p-2 cursor-pointer"
       data-id={t.id.toString()} data-title={t.title.toString()}
       data-status={t.status} data-description={t.description}>
    <div class="text-sm">{t.title || "?"}</div>
    <StatusBadge status={t.status as Status} />
  </div>
  )}
</ul>

<Modal title="Edit Task" buttonId="openEditTaskModal">
  <form
    hx-post="/server/task/update"
    hx-swap="none"
    >
    <Input id="modal-id" name="id" title="Id" class="hidden" type="text" value="init"></Input>
    <Input id="modal-title" name="title" title="Title" type="text" value="init"></Input>
    <Input id="modal-assignee" name="assignee" title="Assignee" type="text" value="init" ></Input>
    <StatusDropdown id="modal-status" selected="" />
    <Input id="modal-description" name="description" title="Description" type="text" value="init" ></Input>

    <DeleteButton url="/server/task/delete" />
    <SubmitButton>Ok</SubmitButton>
  </form>
</Modal>

<script is:inline>
    // Get the item list
    var itemList = document.getElementById('openEditTaskModal');

    // When a list item is clicked, open the modal with the corresponding content
    itemList.addEventListener('click', function(e) {
      const properties = ["id", "title", "assignee", "status", "description"];

      // transfer the task properties from the button metadata into the modal inputs
      // BUGBUG if i click on the badge this fails
      properties.forEach((property) => {
        var value = e.target.getAttribute(`data-${property}`);
        document.getElementById(`modal-${property}`).value = value;
        document.getElementById(`modal-${property}`).dataset[property] = value;
      })
    });
</script>
