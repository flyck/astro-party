---
import Layout from "./Layout.astro"
import ChevronLeftIcon from "../components/mini/arrowLeft.astro"
import ChevronRightIcon from "../components/mini/arrowRight.astro"
import Toast from "../components/toast.astro"
import { fade, slide } from 'astro:transitions';
import { slideLeft, slideRight } from "./MenuSlide.astro"

interface Props {
  left?: string;
  right?: string;
  title: string
  children: any[]
}

const { left, right, title } = Astro.props;
---
<script src="https://unpkg.com/htmx.org"></script>
<Layout>
  <div class="flex min-h-screen items-center" transition:animate="none">
<div id="slideLeftDiv" transition:animate={slideRight({duration: 300})}></div>
<div id="slideRightDiv" transition:animate={slideLeft({duration: 300})}></div>
      <div class="mx-auto my-auto">
      <div class="mb-4 flex w-96 sm:w-80">
        {left ? <div id="leftId" class="flex" aria-label="Go Left" data-link={left}>
          <ChevronLeftIcon class="h-7 w-7 self-center mr-2" />
        </div> : <div class="flex">
          <div class="h-7 w-7 self-center mr-2" />
        </div>}

        <div id="centerMain" class="w-full h-96"><!-- class="w-full h-96 transition-all duration-700 transform ease-out"> -->
          <div class="mb-4">
            <div class="w-full dark:bg-gray-900 bg-gray-100 dark:border-gray-800 p-2 rounded-lg text-center border"
                 transition:name="pageLayoutTitle">
              {title}
            </div>
          </div>
          <div class="rounded-lg border dark:bg-gray-900 bg-gray-100 dark:text-gray-100 text-gray-900 dark:border-gray-800 border-gray-200 h-80">
              <slot />
          </div>
        </div>

        {right ? <div id="rightId" class="flex" aria-label="Go Right"  data-link={right}>
            <ChevronRightIcon class="h-7 w-7 self-center ml-2" />
        </div> : <div class="flex">
            <div class="h-7 w-7 self-center ml-2" />
        </div>}
      </div>
      <Toast />
    </div >
  </div>
</Layout>

<script>
 import { navigate } from 'astro:transitions/client';

 function activateButtons() {
const goRightButton = document.getElementById('rightId');
const goLeftButton = document.getElementById('leftId');
const slideLeftDiv = document.getElementById('slideLeftDiv')!;
const slideRightDiv = document.getElementById('slideRightDiv')!;
const target = document.getElementById('centerMain')!;


   goLeftButton?.addEventListener("click", () => {
   console.log("navigate left")
     target.dataset.astroTransitionScope=slideLeftDiv.dataset.astroTransitionScope
     slideLeftDiv.dataset.astroTransitionScope=undefined
     navigate(goLeftButton.dataset.link!, {history: "push"})
})

goRightButton?.addEventListener("click", () => {
   console.log("navigate right")
   target.dataset.astroTransitionScope=slideRightDiv.dataset.astroTransitionScope
     slideRightDiv.dataset.astroTransitionScope=undefined
     navigate(goRightButton.dataset.link!, {history: "push"})
})
 }
activateButtons()
document.addEventListener(
  "astro:after-swap",
  () => {
    console.log("activating buttons after transition")
    activateButtons()
  },
  { once: false }
);
</script>

<script is:inline>
document.addEventListener(
  "astro:after-swap",
  () => {
    console.log("loading after transition")
    htmx.process(document.body || null)
  },
  { once: false }
);
</script>
